daemon off;
#Heroku dynos have at least 4 cores.
#worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;
worker_processes <%= ENV['NGINX_WORKERS'] || 2 %>;

#pid /var/run/nginx.pid; find what this is

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>; #put environment variable in heroku to change the number depending on load
}

http {
        gzip on;
        gzip_comp_level 2;
        gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met; #put environment variable in heroku to change the number depending on load
	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>; #put environment variable in heroku to change the number depending on load

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
      # fail_timeout=0 means we always retry an upstream even if it failed
      # to return a good HTTP response

      # for UNIX domain socket setups
      server unix:/tmp/nginx.socket fail_timeout=0;
      
      # for a TCP configuration
      # server 192.168.0.7:8000 fail_timeout=0;
 	}

   # server {
   #    # if no Host match, close the connection to prevent host spoofing
   #    listen 80 default_server;
   #    return 444;
   #  }
	server {
      listen <%= ENV["PORT"] %>;
      client_max_body_size 4G;

      # set the correct host(s) for your site
      # server_name example.com www.example.com;
      
      server_name _;
      keepalive_timeout 5;
      
      # path for static files
      #root /path/to/app/current/public;
      root /app/static/;
      
      location /static {
         autoindex on;
         alias /app/static/;
      }

      location /favicon.ico {
         # checks for static file, if not found proxy to app
         #try_files $uri @proxy_to_app;
      }
      
      #had @proxy_to_appas location. Removedto not allow root serving of files
		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $http_host;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_redirect off;
         proxy_buffering off;
			proxy_pass http://app_server;
		}
	}
}